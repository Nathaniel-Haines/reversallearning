title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
ggplot(data=accuracy.by.pres_seg[
!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,colour=Motivation))+geom_line()+
reversal_learning_timeline_ggplot_commands+
labs(title=paste0("Proportion of correct images at each point across all subjects and images"))
ggplot(accuracy.by.pres_seg.subid.summary,
aes(x=presentation_n_over_segments,y=prop.correct.m,colour=Motivation))+#geom_jitter(width = 0.4, height = 0.04,alpha=0.1)+
geom_line()+
geom_errorbar(aes(ymin=prop.correct.m-prop.correct.sd,ymax=prop.correct.m+prop.correct.sd))+
reversal_learning_timeline_ggplot_commands+
labs(title=
paste0("Mean and standard deviation of subject mean at each time point"))
accuracy.by.pres_seg.subid.mat<-tidyr::spread(
accuracy.by.pres_seg.subid[,.(presentation_n_over_segments,prop.correct,subid,Motivation)]
,"presentation_n_over_segments","prop.correct","Motivation")
accuracy.by.pres_seg.subid.mat.presentations<-data.frame(
accuracy.by.pres_seg.subid.mat[,2+1:13,with=FALSE])
accuracy.by.pres_seg.subid.mat.improvement<-
cbind(accuracy.by.pres_seg.subid.mat[,1:2,with=FALSE],
apply(accuracy.by.pres_seg.subid.mat.presentations[,2:13],2,as.numeric)-
apply(accuracy.by.pres_seg.subid.mat.presentations[,1:12],2,as.numeric)
)
colnames(accuracy.by.pres_seg.subid.mat.improvement)<-
c(colnames(accuracy.by.pres_seg.subid.mat.improvement)[1:2],
paste0("PreR",c(2:8)),paste0("PostR",c(1:5)))
dim(accuracy.by.pres_seg.subid.mat.improvement)
accuracy.by.pres_seg.subid.mat<-data.table(tidyr::gather(
accuracy.by.pres_seg.subid.mat.improvement,"Presentation","Improvement",3:14))
improvements.by.timepoint<-rbind(
by(accuracy.by.pres_seg.subid.mat$Improvement,
list(accuracy.by.pres_seg.subid.mat$Motivation,
accuracy.by.pres_seg.subid.mat$Presentation)
,t.test))
improvements.by.timepoint.df<-NULL
for (r in 1:dim(improvements.by.timepoint)[1]){
for (c in 1:dim(improvements.by.timepoint)[2]){
rc.df<-data.frame(t(unlist(improvements.by.timepoint[r,c])))
rc.df$Motivation<-rownames(improvements.by.timepoint)[r]
rc.df$Presentation<-colnames(improvements.by.timepoint)[c]
if(is.null(improvements.by.timepoint.df)){
improvements.by.timepoint.df<-rc.df
}else{
improvements.by.timepoint.df<-rbind(improvements.by.timepoint.df,rc.df)
}
}
}
improvements.by.timepoint.df$Presentation<-
as.numeric(sapply(improvements.by.timepoint.df$Presentation,
function(x){
return(sub(x,pattern = "X",
replacement = ""))
}))
for(i in 1:7){
improvements.by.timepoint.df[,i]<-as.numeric(as.character(improvements.by.timepoint.df[,i]))
}
ggplot(improvements.by.timepoint.df,
aes(x=Presentation,y=estimate.mean.of.x,group=data.name,
colour=Motivation))+#geom_jitter(width = 0.4, height = 0.04,alpha=0.1)+
geom_line()+
geom_errorbar(aes(ymin=conf.int1,ymax=conf.int2))+
reversal_learning_timeline_ggplot_commands+coord_cartesian(ylim=c(-0.1,0.3))+
labs(title=paste0(
"improvement in subject performance at each time point\nConfidence intervals of means across subjects"),
y="Improvement in subject performance\nover previous time point")+
geom_hline(aes(yintercept=0),linetype=2)
cor.test(accuracy.by.pres_seg.subid[presentation_n_over_segments==5]$prop.correct,
accuracy.by.pres_seg.subid[presentation_n_over_segments==13]$prop.correct)
cor.test(accuracy.by.pres_seg.subid[presentation_n_over_segments==9]$prop.correct,
accuracy.by.pres_seg.subid[presentation_n_over_segments==13]$prop.correct)
cor.test(accuracy.by.pres_seg.subid[presentation_n_over_segments==9]$prop.correct,
accuracy.by.pres_seg.subid[presentation_n_over_segments==10]$prop.correct)
main.prop.cor.ggplot+
geom_vline(aes(xintercept=5),linetype=2)+geom_vline(aes(xintercept=13),linetype=2)
accuracy.by.pres_seg.subid[!is.na(presentation_n_over_segments)]
library(tidyr)
accuracy.by.pres_seg.subid[!is.na(presentation_n_over_segments),.(subid,Motivation,presentation_n_over_segments,prop.correct)]
spread(accuracy.by.pres_seg.subid[!is.na(presentation_n_over_segments),.(subid,Motivation,presentation_n_over_segments,prop.correct)],Motivation,prop.correct)
accuracy.by.pres_seg_subid_rp<-spread(accuracy.by.pres_seg.subid[!is.na(presentation_n_over_segments),.(subid,Motivation,presentation_n_over_segments,prop.correct)],Motivation,prop.correct)
accuracy.by.pres_seg_subid_rp
accuracy.by.pres_seg_subid_rp.cor<-accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments]
accuracy.by.pres_seg_subid_rp.cor
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE,),by=presentation_n_over_segments] %>% .[1:5,]
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE,),by=presentation_n_over_segments] %>% .[nrow(.),]
1:2:10
seq(1,10,2)
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE,),by=presentation_n_over_segments] %>% .[seq(1,nrow(.),2),]
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE,),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1),
by=colnames(.)[!colnames(.) %in% c("conf.int")],
suffixes=c(".lower",".upper")])
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE,),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)],
by=colnames(.)[!colnames(.) %in% c("conf.int")],
suffixes=c(".lower",".upper"))
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)],
by=colnames(.)[!colnames(.) %in% c("conf.int")],
suffixes=c(".lower",".upper"))
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)],
by.x=colnames(.)[!colnames(.) %in% c("conf.int")],
by.y=colnames(.)[!colnames(.) %in% c("conf.int")],
suffixes=c(".lower",".upper"))
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)],
by="p.value",
#by.x=colnames(.)[!colnames(.) %in% c("conf.int")],
#  by.y=colnames(.)[!colnames(.) %in% c("conf.int")],
suffixes=c(".lower",".upper"))
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments]
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] %>%
c(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)])
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)])
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)])
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)],by="p.value")
accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1)],by.x="p.value",by.y="p.value")
tm
tm<-accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments]
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],by.x="p.value",by.y="p.value")
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],by.x=colnames(.)[!colnames(.) %in% c("conf.int")],by.y=colnames(.)[!colnames(.) %in% c("conf.int")])
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],by.x=colnames(tm)[!colnames(tm) %in% c("conf.int")],by.y=colnames(tm)[!colnames(.) %in% c("conf.int")])
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],by.x=colnames(tm)[!colnames(tm) %in% c("conf.int")],by.y=colnames(tm)[!colnames(tm) %in% c("conf.int")])
colnames(tm)[!colnames(tm) %in% c("conf.int")]
colnames(tm)[!colnames(tm) %in% c("conf.int")]
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int")]
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x=mergecols,by.y=mergecols)
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int")]
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x=mergecols,by.y=mergecols)
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int","p.value")]
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x=mergecols,by.y=mergecols)
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int","p.value","statistic","presentation_n_over_segments")]
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x=mergecols,by.y=mergecols)
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int","p.value","statistic","estimate")]
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x=mergecols,by.y=mergecols)
mergecols
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int","p.value","statistic","estimate")]
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x=mergecols,by.y=mergecols)
mergecols
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int","p.value","statistic","estimate","alternative")]
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x=mergecols,by.y=mergecols)
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x=presentation_n_over_segments,by.y=presentation_n_over_segments)
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1)],
by.x="presentation_n_over_segments",by.y="presentation_n_over_segments")
tm<-accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] #%>%
setkey(tm,presentation_n_over_segments)
res<-tm[seq(1,nrow(tm),2),][tm[seq(1,nrow(tm),1)]]
res
res<-tm[seq(1,nrow(tm),2),][tm[seq(1,nrow(tm),1)],nomatch=0]
res
tm<-data.frame(accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments]) #%>%
tm
tm<-data.frame(accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE)[p.value],by=presentation_n_over_segments]) #%>%
tm<-data.frame(accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE)[,p.value],by=presentation_n_over_segments]) #%>%
tm<-data.frame(accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE)[,p.value]],by=presentation_n_over_segments]) #%>%
tm<-data.frame(accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments]) #%>%
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1),])
data.frame(accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments]) %>%
merge(.[seq(1,nrow(.),2),],.[seq(1,nrow(.),1),])
tm<-data.frame(accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments]) #%>%
merge(tm[seq(1,nrow(tm),2),],tm[seq(1,nrow(tm),1),])
tm[seq(1,nrow(tm),1),]
merge(tm[seq(1,nrow(tm),2),],tm[seq(2,nrow(tm),2),])
tm<-accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] #%>%
merge(tm[seq(1,nrow(tm),2),],tm[seq(2,nrow(tm),2),])
merge(tm[seq(1,nrow(tm),2),],tm[seq(2,nrow(tm),2),],by.x="presentation_n_over_segments",by.y="presentation_n_over_segments")
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int")]
tm<-accuracy.by.pres_seg_subid_rp[,cor.test(punishment,reward,na.rm=TRUE),by=presentation_n_over_segments] #%>%
mergecols<-colnames(tm)[!colnames(tm) %in% c("conf.int")]
merge(tm[seq(1,nrow(tm),2),],tm[seq(2,nrow(tm),2),],
by.x=mergecols,by.y=mergecols,
suffixes=c("lower","upper"))
accuracy.by.pres_seg_subid_rp_cor<-merge(tm[seq(1,nrow(tm),2),],tm[seq(2,nrow(tm),2),],
by.x=mergecols,by.y=mergecols,
suffixes=c(".lower",".upper"))
accuracy.by.pres_seg_subid_rp_cor
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments y=estimate))+
geom_line()
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
geom_line()
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of correlation across subjects"))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands+
()
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of correlation across subjects"))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects at each presentation step"))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper))+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="gray")+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="#333333")+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="#666666")+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="#999999")+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="#999999")+
geom_point()+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_point()
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_point(alpha=0.5)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_tile()
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_jitter(width = 0.01,height=0.01,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth()+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_grid(presentation_n_over_segments~.)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_grid(presentation_n_over_segments~.)+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(presentation_n_over_segments~.)+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)+
()
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
#geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)
accuracy.by.pres_seg_subid_rp
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=reward,y=reward))+
#geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=reward,y=reward))+
#geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(.~presentation_n_over_segments)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=reward,y=reward))+
geom_smooth(method = "lm")+
#geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(x){return(break.labels[x])})
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(x){return(break.labels[[x]])})
myt<-function(x){return(break.labels[[x]])
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(x){return(break.labels[[x]])})
myt<-function(x){return(break.labels[[x]])}
myt<-function(x){return(break.labels[[x]])}
_\
myt<-function(x){return(break.labels[[x]])}
myt
myt(3)
myt(1)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(var,val){return(break.labels[[val]])})
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(var,val){return(break.labels[[val]])})
break.labels[[val]]
break.labels
break.labels[var]
break.labels[[var]]
var
break.labels
break.labels[1:3]
break.labels[var]
break.labels[unlist(var)]
unlist(var)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(var){return(break.labels[unlist(var)])})
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments<-
factor(accuracy.by.pres_seg_subid_rp$presentation_n_over_segments,
levels = break.labels)
paste("Pre-reversal",1:8)
break.labels.2=c(paste("Pre-rev",1:8),paste("Rev",1:5))
break.labels.2
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments<-
factor(accuracy.by.pres_seg_subid_rp$presentation_n_over_segments,
levels = break.labels.2)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments
accuracy.by.pres_seg_subid_rp<-spread(accuracy.by.pres_seg.subid[!is.na(presentation_n_over_segments),.(subid,Motivation,presentation_n_over_segments,prop.correct)],Motivation,prop.correct)
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments<-
factor(accuracy.by.pres_seg_subid_rp$presentation_n_over_segments,
levels = 1:13,labels=break.labels.2)
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
myg<-ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
myg+geom_abline()
myg+geom_abline(linetype=2)
myg<-ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1))
myg<-ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2)
myg
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=1)
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=1)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=0.1)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=0.02,alpha=0.6)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
accuracy.by.pres_seg_subid_rp_cor
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=0.02,alpha=0.6)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
#install.packages("R.matlab")
library(R.matlab)
#install.packages('data.table')
library(data.table)
#install.packages('ggplot2')
library(ggplot2)
#install.packages("tidyr")
library(tidyr)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=0.02,alpha=0.6)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
