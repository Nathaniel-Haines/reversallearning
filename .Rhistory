y="R correlation estimate with 95% CI",
title=paste0("Estimate of correlation across subjects"))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects at each presentation step"))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_ribbon(aes(ymin=conf.int.lower,ymax=conf.int.upper),alpha=0.3)+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper))+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="gray")+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="#333333")+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="#666666")+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="#999999")+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp_cor,aes(x=presentation_n_over_segments,y=estimate))+
labs(#x="Presentation",
y="R correlation estimate with 95% CI",
title=paste0("Estimate of Reward-Punishment correlation across subjects\nat each presentation step"))+
geom_line()+
geom_errorbar(aes(ymin=conf.int.lower,ymax=conf.int.upper),color="#999999")+
geom_point()+
reversal_learning_timeline_ggplot_commands
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_point()
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_point(alpha=0.5)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_tile()
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_jitter(width = 0.01,height=0.01,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth()+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_grid(presentation_n_over_segments~.)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_grid(presentation_n_over_segments~.)+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(presentation_n_over_segments~.)+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)+
()
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
#geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)
accuracy.by.pres_seg_subid_rp
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=reward,y=reward))+
#geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=reward,y=reward))+
#geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(.~presentation_n_over_segments)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=reward,y=reward))+
geom_smooth(method = "lm")+
#geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(presentation_n_over_segments~.)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(x){return(break.labels[x])})
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(x){return(break.labels[[x]])})
myt<-function(x){return(break.labels[[x]])
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(x){return(break.labels[[x]])})
myt<-function(x){return(break.labels[[x]])}
myt<-function(x){return(break.labels[[x]])}
_\
myt<-function(x){return(break.labels[[x]])}
myt
myt(3)
myt(1)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(var,val){return(break.labels[[val]])})
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(var,val){return(break.labels[[val]])})
break.labels[[val]]
break.labels
break.labels[var]
break.labels[[var]]
var
break.labels
break.labels[1:3]
break.labels[var]
break.labels[unlist(var)]
unlist(var)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments,labeller=function(var){return(break.labels[unlist(var)])})
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments<-
factor(accuracy.by.pres_seg_subid_rp$presentation_n_over_segments,
levels = break.labels)
paste("Pre-reversal",1:8)
break.labels.2=c(paste("Pre-rev",1:8),paste("Rev",1:5))
break.labels.2
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments<-
factor(accuracy.by.pres_seg_subid_rp$presentation_n_over_segments,
levels = break.labels.2)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments
accuracy.by.pres_seg_subid_rp<-spread(accuracy.by.pres_seg.subid[!is.na(presentation_n_over_segments),.(subid,Motivation,presentation_n_over_segments,prop.correct)],Motivation,prop.correct)
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments<-
factor(accuracy.by.pres_seg_subid_rp$presentation_n_over_segments,
levels = 1:13,labels=break.labels.2)
accuracy.by.pres_seg_subid_rp$presentation_n_over_segments
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
myg<-ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)
myg+geom_abline()
myg+geom_abline(linetype=2)
myg<-ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1))
myg<-ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2)
myg
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=1)
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=1)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=0.1)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=0.02,alpha=0.6)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
accuracy.by.pres_seg_subid_rp_cor
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=0.02,alpha=0.6)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
#install.packages("R.matlab")
library(R.matlab)
#install.packages('data.table')
library(data.table)
#install.packages('ggplot2')
library(ggplot2)
#install.packages("tidyr")
library(tidyr)
ggplot(accuracy.by.pres_seg_subid_rp,aes(x=punishment,y=reward))+
facet_wrap(~presentation_n_over_segments)+geom_segment(aes(x=0,y=0,xend=1,yend=1),linetype=2,size=0.02,alpha=0.6)+
labs(x="Reward Performance across all trials by subject",
y="Punishment performance across all trials by subject",
title=paste0("Reward and Punishment performance for each subject"))+
geom_smooth(method = "lm")+
geom_jitter(width = 0.03,height=0.03,alpha=0.4)
View(rl.all.subjects.list)
rl.all.subjects.list[subid=="107"]
require(data.table)
rl.all.subjects.list[subid==107]
View(rl.all.subjects.list[subid==107])
View(rl.all.subjects.list[subid==107,.N,blockid])
View(rl.all.subjects.list[subid==107,.N,trial])
View(rl.all.subjects.list[,.N,.(trial,subid)])
rl.all.subjects.list[subid==107]
rl.all.subjects.list[subid==107 & Motivation=="reward"]
View(rl.all.subjects.list[subid==107 & Motivation=="reward"])
accuracy.by.pres_seg.image<-
rl.all.subjects.list[,.(prop.correct=sum(correct)/.N,count=.N),.(presentation_n_over_segments,Motivation,trial,)]
accuracy.by.pres_seg.image<-
rl.all.subjects.list[,.(prop.correct=sum(correct)/.N,count=.N),.(presentation_n_over_segments,Motivation,trial)]
View(accuracy.by.pres_seg.image)
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.subid[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=subid))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all images by user",
title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=subid))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all images by user",
title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
library(ggplot2)
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=subid))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all images by user",
title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
accuracy.by.pres_seg.image.finalpc<-
accuracy.by.pres_seg.image[presentation_n_over_segments==4,.(final.prop.correct=prop.correct),.(trial,Motivation)]
accuracy.by.pres_seg.image<-merge(accuracy.by.pres_seg.image,accuracy.by.pres_seg.image.finalpc,by=c("trial","Motivation"))
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=subid))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all images by user",
title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=trial))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all images by user",
title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
main.prop.cor.ggplot
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=trial))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all images by user",
title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=trial))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all images by user",
title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
main.prop.cor.ggplot
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=trial))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all images by user",
title=paste0("proportion correct across all images by user\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=trial))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all users by image",
title=paste0("proportion correct across all users by image\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=trial))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all users by image",
title=paste0("proportion correct across all users by image\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
library(ggplot2)
main.prop.cor.ggplot<-
ggplot(accuracy.by.pres_seg.image[!is.na(presentation_n_over_segments)],
aes(x=presentation_n_over_segments,y=prop.correct,group=trial))+
geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c("red","green","blue","violet"))+
#scale_x_continuous(breaks=-8:4,labels=break.labels)+
labs(#x="Presentation",
y="Proportion correct across all users by image",
title=paste0("proportion correct across all users by image\n from start to finish of reversal learning"))+
geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+
facet_grid(Motivation ~ .)+
#theme(strip.text.y=element_text(colour="orange"))+
reversal_learning_timeline_ggplot_commands+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],
aes(yintercept = prop.correct.m),
linetype=2)+
geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],
aes(yintercept = prop.correct.m),
linetype=2)
main.prop.cor.ggplot
main.prop.cor.ggplot
