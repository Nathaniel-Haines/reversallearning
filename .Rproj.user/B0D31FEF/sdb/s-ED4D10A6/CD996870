{
    "collab_server" : "",
    "contents" : "#install.packages(\"R.matlab\")\nlibrary(R.matlab)\n#install.packages('data.table')\nlibrary(data.table)\n#install.packages('ggplot2')\nlibrary(ggplot2)\n#install.packages(\"tidyr\")\nlibrary('tidyr')\n\n#install.packages(\"corrplot\")\nlibrary(corrplot)\n\nsource(\"rl_behav_analysis_learning_setup.R\")\n\n######################\n#align by pre-post reversal\nbreak.labels=c(\"1\\nPre-reversal\",2:8,\"1\\nReversal\",2:5)\n\n\naccuracy.by.pres_seg.subid<-rl.all.subjects.list[,.(prop.correct=sum(correct)/.N,count=.N),.(presentation_n_over_segments,subid,Motivation)]\n\naccuracy.by.pres_seg<-\n  rl.all.subjects.list[,.(prop.correct=sum(correct)/.N,count=.N),.(presentation_n_over_segments,Motivation)]\n\n#mean across subjects\n# accuracy.by.pres_seg.subid.summary<-accuracy.by.pres_seg.subid[\n#   ,\n#   .(prop.correct.m=mean(prop.correct),\n#     prop.correct.sd=sd(prop.correct),\n#     prop.correct.p25=rank(prop.correct)/.N),\n#   .(presentation_n_over_segments,Motivation)]\n\nbreak.labels=c(\"1\\nPre-reversal\",2:last_nonreversal,\"1\\nReversal\",2:6)\naccuracy.by.pres_seg.subid.finalpc<-\n  accuracy.by.pres_seg.subid[presentation_n_over_segments==4,.(final.prop.correct=prop.correct),.(subid,Motivation)]\naccuracy.by.pres_seg.subid<-merge(accuracy.by.pres_seg.subid,accuracy.by.pres_seg.subid.finalpc,by=c(\"subid\",\"Motivation\"))\n\n\nreversal_learning_timeline_ggplot_commands<-\n  list(scale_x_continuous(breaks=1:length(break.labels),labels=break.labels),\n       labs(x=\"Presentation\"),\n       theme(axis.text.x = element_text(hjust=0),\n             axis.text = element_text(face=\"bold\"),#left-align presentation labels\n             strip.text = element_text(face=\"bold\"),\n             legend.position = \"bottom\"\n       ))\n#accuracy.by.pres_seg.subid.finalpc<-accuracy.by.pres_seg.subid[presentation_n_over_segments==13,.(final.prop.correct=prop.correct),subid]\n#accuracy.by.pres_seg.subid<-merge(accuracy.by.pres_seg.subid,accuracy.by.pres_seg.subid.finalpc,by=\"subid\")\n\n\n#mean across subjects\naccuracy.by.pres_seg.subid.summary<-accuracy.by.pres_seg.subid[\n  presentation_n_over_segments<=13,\n  .(prop.correct.m=mean(prop.correct),\n    prop.correct.sd=sd(prop.correct)),\n  .(presentation_n_over_segments,Motivation)]\n  \n# accuracy.by.pres_seg.subid[subid==204,]\n# View(rl.all.subjects.list[subid==204 & (trial==94 | trial==93),])\n# View(rl.all.subjects.list[subid==204,])\n# View(rl.all.subjects.list[,.(fileid,runid,subid),.(subid,runid)])\n# table(rl.all.subjects.list[,.(runid,subid)])\n# accuracy.by.pres_seg.subid[1:100]\nmain.prop.cor.ggplot<-\n  ggplot(accuracy.by.pres_seg.subid[!is.na(presentation_n_over_segments)],\n       aes(x=presentation_n_over_segments,y=prop.correct,group=subid))+\n  geom_line(aes(colour=final.prop.correct),size=1.5,alpha=0.3)+ scale_colour_gradientn(colours=c(\"red\",\"green\",\"blue\",\"violet\"))+\n  #scale_x_continuous(breaks=-8:4,labels=break.labels)+\n  labs(#x=\"Presentation\",\n    y=\"Proportion correct across all images by user\",\n    title=paste0(\"proportion correct across all images by user\\n from start to finish of reversal learning\"))+\n  geom_line(data=accuracy.by.pres_seg.subid.summary,aes(x=presentation_n_over_segments,y=prop.correct.m,group=NULL))+\n      facet_grid(Motivation ~ .)+\n  #theme(strip.text.y=element_text(colour=\"orange\"))+\n  reversal_learning_timeline_ggplot_commands+\n  geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==5],\n             aes(yintercept = prop.correct.m),\n             linetype=2)+\n  geom_hline(data=accuracy.by.pres_seg.subid.summary[presentation_n_over_segments==13],\n             aes(yintercept = prop.correct.m),\n             linetype=2)\n\nmain.prop.cor.ggplot\n\n\n#it's this shape because for the last few time points, subjects have very few trials (images) over which the score is averaged\n#we don't have any blank spaces in this graph because *all* subjects had *a few * 6,7,8 trials. Just not very many.\n#this is athe better way to analyze the data, though. The pre-reversal trials should definitely be aligned by the trials since first trial,\n#not trials before reversal.\n\n#total accuracy\n\nggplot(data=accuracy.by.pres_seg[\n  !is.na(presentation_n_over_segments)],\n  aes(x=presentation_n_over_segments,y=prop.correct,colour=Motivation))+geom_line()+\n  reversal_learning_timeline_ggplot_commands+\n  labs(title=paste0(\"Proportion of correct images at each point across all subjects and images\"))\n\n#OK. Let's try to plot the average subject performance\nggplot(accuracy.by.pres_seg.subid.summary,\n       aes(x=presentation_n_over_segments,y=prop.correct.m,colour=Motivation))+#geom_jitter(width = 0.4, height = 0.04,alpha=0.1)+\n  geom_line()+\n  geom_errorbar(aes(ymin=prop.correct.m-prop.correct.sd,ymax=prop.correct.m+prop.correct.sd))+\n  reversal_learning_timeline_ggplot_commands+\n  labs(title=\n         paste0(\"Mean and standard deviation of subject mean at each time point\"))\n\n  \n  ##need a matrix of % correct where each row is a subject, each column is a presentation.\n  accuracy.by.pres_seg.subid.mat<-tidyr::spread(\n    accuracy.by.pres_seg.subid[,.(presentation_n_over_segments,prop.correct,subid,Motivation)]\n    ,\"presentation_n_over_segments\",\"prop.correct\",\"Motivation\")\n   accuracy.by.pres_seg.subid.mat.presentations<-data.frame(\n     accuracy.by.pres_seg.subid.mat[,2+1:13,with=FALSE])\n  \n  accuracy.by.pres_seg.subid.mat.improvement<-\n    cbind(accuracy.by.pres_seg.subid.mat[,1:2,with=FALSE],\n    apply(accuracy.by.pres_seg.subid.mat.presentations[,2:13],2,as.numeric)-\n    apply(accuracy.by.pres_seg.subid.mat.presentations[,1:12],2,as.numeric)\n          )\n  \n  colnames(accuracy.by.pres_seg.subid.mat.improvement)<-\n    c(colnames(accuracy.by.pres_seg.subid.mat.improvement)[1:2],\n      paste0(\"PreR\",c(2:8)),paste0(\"PostR\",c(1:5)))\n    \n  #so at each level, did subjects improve significantly?\n  dim(accuracy.by.pres_seg.subid.mat.improvement)\n  \n  #let's plot confidence intervals of improvements at each time point across subjects\n  accuracy.by.pres_seg.subid.mat<-data.table(tidyr::gather(\n    accuracy.by.pres_seg.subid.mat.improvement,\"Presentation\",\"Improvement\",3:14))\n  #improvements.by.timepoint<-data.frame(t(apply(accuracy.by.pres_seg.subid.mat.improvement[,3:14,with=FALSE],2,function(x){unlist(t.test(x))})))\n  #improvements.by.timepoint<-accuracy.by.pres_seg.subid.mat[,.(MeanImprovement:=data.table((t.test(Improvement)))),.(Motivation,Presentation)]\n  improvements.by.timepoint<-rbind(\n    by(accuracy.by.pres_seg.subid.mat$Improvement,\n       list(accuracy.by.pres_seg.subid.mat$Motivation,\n            accuracy.by.pres_seg.subid.mat$Presentation)\n       ,t.test))\n  improvements.by.timepoint.df<-NULL\n  for (r in 1:dim(improvements.by.timepoint)[1]){\n    for (c in 1:dim(improvements.by.timepoint)[2]){\n      rc.df<-data.frame(t(unlist(improvements.by.timepoint[r,c])))\n      rc.df$Motivation<-rownames(improvements.by.timepoint)[r]\n      rc.df$Presentation<-colnames(improvements.by.timepoint)[c]\n      if(is.null(improvements.by.timepoint.df)){\n        improvements.by.timepoint.df<-rc.df\n      }else{\n        improvements.by.timepoint.df<-rbind(improvements.by.timepoint.df,rc.df)\n      }\n    }\n  }\n  improvements.by.timepoint.df$Presentation<-\n    as.numeric(sapply(improvements.by.timepoint.df$Presentation,\n       function(x){\n         return(sub(x,pattern = \"X\",\n             replacement = \"\"))\n       }))\n  for(i in 1:7){\n    improvements.by.timepoint.df[,i]<-as.numeric(as.character(improvements.by.timepoint.df[,i]))\n  }\n  \n  ggplot(improvements.by.timepoint.df,\n         aes(x=Presentation,y=estimate.mean.of.x,group=data.name,\n             colour=Motivation))+#geom_jitter(width = 0.4, height = 0.04,alpha=0.1)+\n    geom_line()+\n    geom_errorbar(aes(ymin=conf.int1,ymax=conf.int2))+\n    reversal_learning_timeline_ggplot_commands+coord_cartesian(ylim=c(-0.1,0.3))+\n    labs(title=paste0(\n      \"improvement in subject performance at each time point\\nConfidence intervals of means across subjects\"),\n         y=\"Improvement in subject performance\\nover previous time point\")+\n    geom_hline(aes(yintercept=0),linetype=2)\n  \n  \n  \n  #how much did reversal learning correlate with initial learning?\n  #let's exclude steps 6-8 because there were a smaller number of trials that went for that long.\n  #looking at *per subject* scores, how much did subject 5th post-reversal accuracy correlate with\n  #5th pre-reversal step accuracy?\n  cor.test(accuracy.by.pres_seg.subid[presentation_n_over_segments==5]$prop.correct,\n           accuracy.by.pres_seg.subid[presentation_n_over_segments==13]$prop.correct)\n  #pretty strongly\n  #out of interest, how much does BAD performance at reversal correlate with GOOD performance post-reversal?\n  cor.test(accuracy.by.pres_seg.subid[presentation_n_over_segments==9]$prop.correct,\n           accuracy.by.pres_seg.subid[presentation_n_over_segments==13]$prop.correct)\n  \n  cor.test(accuracy.by.pres_seg.subid[presentation_n_over_segments==9]$prop.correct,\n           accuracy.by.pres_seg.subid[presentation_n_over_segments==10]$prop.correct)\n  \n  \n  main.prop.cor.ggplot+\n    geom_vline(aes(xintercept=5),linetype=2)+geom_vline(aes(xintercept=13),linetype=2)\n  \n  #Do all subjects tend to learn reversal incrementally or do the best plateau early?\n  #To answer this we want to know: how does *improvement* at each time point correlate?\n  dim(accuracy.by.pres_seg.subid.mat.improvement)\n  corrplot(cor(accuracy.by.pres_seg.subid.mat.improvement),method=\"number\")\n  cor.test(accuracy.by.pres_seg.subid.mat.improvement$PostR4,accuracy.by.pres_seg.subid.mat.improvement$PostR5)\n  \n  #OK but follow-up question: is *performance* at PostR4 also negatively correlated with *improvement* at PostR5\n  #in other words, do we have evidence that this is due to bad participants 'catching up'?\n  cor.test(accuracy.by.pres_seg.subid[presentation_n_over_segments==12,prop.correct],\n           accuracy.by.pres_seg.subid.mat.improvement$PostR5)\n  #yes, thre is a moderate relationship between performance at PostR4 and \n  ggplot(data=merge(\n    accuracy.by.pres_seg.subid[presentation_n_over_segments==12,.(prop.correct,Motivation,subid)],\n    accuracy.by.pres_seg.subid.mat.improvement[,.(X13,Motivation,subid)],\n    by=c(\"Motivation\",\"subid\")\n    ),\n    aes(x=prop.correct,y=X13,colour=Motivation)\n  )+geom_jitter(width=0.03,height=0.03,alpha=0.6)+\n    geom_smooth(method=\"lm\")+\n    theme(legend.position=\"bottom\")+\n    labs(title=paste0(\"Score improvement at Post-reversal round 5\\nby Score at Post-reversal round 4\"),\n         x=\"Round 4 Proportion Correct\",y=\"Round 5 Improvement\")\n  \n  # Do subjects tend to learn the reversal association incrementally, or do they have a sudden ‘eureka’ moment for each association and then subsequently get that particular association right each time?\n  # \n  # We would have to examine each individual subject*trial, and see - does having got a particular trial right predict being more likely to get that particular trial right in subsequent rounds?\n  # We could ask that question for each round, looking across all subjects and trial. Being correct is a binary outcome so we’re thinking of logistic regression - basically, at each round, across all subjects and trials, does getting it right the previous time predict getting it right the next time?\n  dim(rl.all.subjects.list)\n  colnames(rl.all.subjects.list)\n  #so let's start by trying to predict PreR3 from PreR2.\n  #we need to keep in mind that subjects are not independent so there is a confound here and I am not exactly sure how to deal with tht\n  #one approach would be to calculate a raw score within-subject for each image and then do that across subjects\n  #that would be very *underpowered* but it would be valid.\n#but let's start with the easy design\nlibrary(epitools)\nbreak.labels.alt<-c(paste0(\"PreR\",c(1:8)),paste0(\"PostR\",c(1:5)))\nor.progression<-NULL\ntimestep.range<-c(2:5,10:13)\nfor (i in timestep.range){\n  print(paste0(\"Odds ratio for correct performance at T\",break.labels.alt[i],\" compared to T\", break.labels.alt[(i-1)]))\n  # predict.3.from.2<-glm(rl.all.subjects.list[presentation_n_over_segments==i,correct]~\n  #                         rl.all.subjects.list[presentation_n_over_segments==(i-1),correct],family=binomial(link='logit'))\n  # \n  #actually, with two binary variables, a chi-square should do.\n  presentations<-\n    data.frame(\"Presentation1\"=rl.all.subjects.list[presentation_n_over_segments==(i-1),correct],\n               \"Presentation2\"=rl.all.subjects.list[presentation_n_over_segments==(i),correct])\n  \n  print(chisq.test(table(presentations)))\n  #install.packages(\"epitools\")\n  or.res<-oddsratio.wald(presentations$Presentation1,presentations$Presentation2)\n  print(or.res)\n  #odds ratio for getting it right in round 3 is 1.97 times getting it right in round 2\n  if(is.null(or.progression)){\n    or.progression<-as.data.frame(t(or.res$measure[2,1:3]))\n  }else{\n    or.progression<-rbind(or.progression,as.data.frame(t(or.res$measure[2,1:3])))\n  }\n}\nor.progression$timestep<-break.labels.alt[timestep.range]\nor.progression$index<-timestep.range\n\nggplot(or.progression,aes(y=estimate,x=index))+#geom_jitter(width = 0.4, height = 0.04,alpha=0.1)+\n  geom_point()+\n  geom_errorbar(aes(ymin=lower,ymax=upper))+\n  reversal_learning_timeline_ggplot_commands+\n  labs(title=paste0(\"Odds ratio of correct response at time point\\ngiven a correct response at previous time point\\nover all subjects and trials\\n(Reward and punishment trials)\"),\n       y=\"OR improvement over previous timepoint\")+\n  geom_vline(aes(xintercept=9),linetype=2)\n\n",
    "created" : 1484098473902.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1961961484",
    "id" : "CD996870",
    "lastKnownWriteTime" : 1498163676,
    "last_content_update" : 1498163676246,
    "path" : "~/Google Drive/joint-modeling/reversal-learning/behavioral-analysis/rl_behav_analysis_learning.R",
    "project_path" : "rl_behav_analysis_learning.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}