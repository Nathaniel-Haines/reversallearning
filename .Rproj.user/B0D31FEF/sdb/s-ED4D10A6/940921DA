{
    "collab_server" : "",
    "contents" : "#install.packages(\"R.matlab\")\nrequire(R.matlab)\n#install.packages('data.table')\nrequire(data.table)\n#install.packages('ggplot2')\nrequire(ggplot2)\n#install.packages(\"tidyr\")\nrequire('tidyr')\n\n#install.packages(\"corrplot\")\nrequire(corrplot)\n\nrl.all.subjects.list<-NULL\nfor (condition in c(\n  \"reward\",\n  \"punishment\"\n)){\n  #condition<-\"reward\"\n  \n  \n  break.labels=c(\"1\\nPre-reversal\",2:8,\"1\\nReversal\",2:5)\n  reversal_learning_timeline_ggplot_commands<-\n    list(scale_x_continuous(breaks=-8:4,labels=break.labels),\n         labs(x=\"Presentation\"),\n         theme(axis.text.x = element_text(hjust=0),\n               axis.text = element_text(face=\"bold\")#left-align presentation labels\n         ))\n  if (condition==\"reward\"){\n    filename.pattern<-\"^rlr_sub[0-9]+_run[0-9]+_.*\\\\.mat\"\n    filename.prefix<-\"/rlr_sub\"\n    filename.prefix2<-\"/rlr_\"\n    graph.title.condition.suffix<-\"\\n(Reward trials)\"\n  }else if(condition==\"punishment\"){\n    filename.pattern<-\"^rlp_sub[0-9]+_run[0-9]+_.*\\\\.mat\"\n    filename.prefix<-\"/rlp_sub\"\n    filename.prefix2<-\"/rlp_\"\n    graph.title.condition.suffix<-\"\\n(Punishment trials)\"\n  }\n  #get list of subjects\n  sub.rec.filenames.f1<-list.files(path=\"RL_behav/\",pattern=filename.pattern,ignore.case=TRUE)\n  sub.rec.filenames.f2<-list.files(path=\"ReversalLearning/new\",pattern=filename.pattern,ignore.case=TRUE)\n  sub.rec.filenames.f3<-list.files(path=\"ReversalLearning/results\",pattern=filename.pattern,ignore.case=TRUE)\n  get.sub.rl.data <- function(sub.filename,sub.folder){\n    mat.data<-readMat(sub.filename)\n    sub.data<-as.data.frame(mat.data$RL)\n    colnames(sub.data)<-\n      c(\"ID\",\"trial\",\"cor_res\",\"Condition\",\"response_key\",\"reaction_time\",\n        \"score\",\"onset_time_designed\",\"onset_time_actual\",\n        \"reversal_trial\",\"runid\",\"blockid\")\n    \n    # MID=1; %\n    #   %Mtrial=2; %\n    #   % Mcrres=3; % Correct Response\n    #  Mcond=4; % 1: reversal; 2: control\n    #  Mres=5; % left or right key. counterbalance across subjects;\n    #  MRT=6; % reaction time;\n    #  Mscore=7; % 1: correct; -1: wrong; 0: no response\n    #  Monset=8; % designed trial onset time\n    #  MAonset=9; % actually trial onset time\n    #  Misrev=10; % is this trial a reversal one?\n    #  Mrunid=11; % is this trial a reversal one?\n    #  Mblockid=12; % is this trial a reversal one?\n    \n    #get order for \n    \n    aggregate(sub.data$onset_time_actual,\n              by=list(sub.data$trial),\n              order)\n    \n    sub.data.table<-data.table(sub.data)\n    if(any(sub.data.table$onset_time_actual==0)){\n      sub.data.table[onset_time_actual==0,onset_time_actual:=NA]\n      warning(paste(\"an onset_time_actual of 0 was found for a subject with sub.filename\",sub.filename,\"\\nThis is not necessarily a problem, but it does indicate some irregulary in that subject's data.\\nThe onset times for those presentations havae been modified to be \\\"NA\\\".\"))\n    }\n    sub.data.table[,presentation_n:=.(order(onset_time_actual)),by=trial]\n    #set a presentation order relative to the reversal.\n    #presentation 0 will be the first presentation after reversal\n    #and other presentations will be numbered relative to that. \n    #get the minimum presentation_n_raw where reversal_trail==1, for each trial\n    sub.data.table<-\n      merge(sub.data.table,\n            sub.data.table[reversal_trial==1,.(first_reversal=min(presentation_n)),by=trial],\n            by=\"trial\",all=TRUE)\n    #some trials had NO reversals; their \"reversal_trial\" ID will be NA.\n    #Those ARE appropriate for learning about reversal\n    #but they would be INAPPROPRIATE to include in \"reversal trial\" graphs where we look at learning relative to reversal\n    #so we will not give them a presentation_n. They still have presentation_n_raw\n    sub.data.table[,presentation_n_after_reversal:=presentation_n-first_reversal]\n    sub.data.table[,trial_contains_reversal:=!is.na(first_reversal)]\n    \n    #additional measure presentation_n_in_segment measures which order this presentation had within the learning sequence\n    sub.data.table[,presentation_n_in_segment:=presentation_n]\n    #print(class(sub.data.table$presentation_n))\n    #print(class(sub.data.table$first_reversal))\n    \n    sub.data.table[presentation_n>=first_reversal,presentation_n_in_segment:=presentation_n-first_reversal+1L]\n    sub.data.table[,reversal_trial:=presentation_n>=first_reversal]\n    \n    #now plot % correct scores for each presentation across trials\n    sub.data.table[,correct:=.(score==1)]\n    #this will consider a \"no response\" as incorrect\n    \n    \n    sub.data.table$fileid<-sub(\".mat\",\"\",sub(paste0(sub.folder,filename.prefix2),\"\",sub.filename))\n    \n    #identify unique subjects\n    #we're going to rely on a specific format of filename here\n    #I have my reservations, but whatever.\n    sub.id<-substr(sub.filename,nchar(paste0(sub.folder,filename.prefix))+1,regexpr(\"_run\",sub.filename)-1)\n    sub.data.table$subid<-as.numeric(sub.id)\n    run.start<-regexpr(paste0(\"^\",sub.folder,filename.prefix,\"[0-9]+_run\"),sub.filename)\n    run.end<-regexpr(paste0(\"^\",sub.folder,filename.prefix,\"[0-9]+_run[0-9]+_\"),sub.filename)\n    sub.data.table$runid<-as.numeric(substr(sub.filename,attributes(run.start)$match.length+1,attributes(run.end)$match.length-1))\n    return(sub.data.table)\n  }\n  \n  #res<-get.sub.rl.data(paste0(\"RL_behav/\",sub.rec.filenames[1]))\n  rl.subjects.f1.list<-do.call(\"rbind\",lapply(paste0(\"RL_behav/\",sub.rec.filenames.f1),get.sub.rl.data,\"RL_behav\"))\n  rl.subjects.f2.list<-do.call(\"rbind\",lapply(paste0(\"ReversalLearning/new/\",sub.rec.filenames.f2),get.sub.rl.data,\"ReversalLearning/new\"))\n  rl.subjects.f3.list<-do.call(\"rbind\",lapply(paste0(\"ReversalLearning/results/\",sub.rec.filenames.f3),get.sub.rl.data,\"ReversalLearning/results\"))\n  unique(rl.subjects.f1.list$subid)\n  length(unique(rl.subjects.f1.list$subid))\n  length(unique(rl.subjects.f2.list$subid))\n  unique(rl.subjects.f3.list$subid)\n  subs.only.in.rl_behav<-setdiff(unique(rl.subjects.f1.list$subid),unique(rl.subjects.f2.list$subid))\n  #RL_behav contains 112, which ReversalLearning/new/ does not.\n  subs.only.in.reversallearning.results<-setdiff(unique(rl.subjects.f3.list$subid),unique(rl.subjects.f2.list$subid))\n  #ReversalLearning/results/ contains three subjects, 155, 262, and 390, which ReversalLearning/new/ does not.\n  \n  # \n  # View(rl.subjects.f1.list[subid==112])\n  # rl.subjects.f1.list$subid\n  # rl.subjects.f1.list[,.(count=.N),.(subid)]\n  # View(rl.subjects.f1.list[,.(count=.N),.(subid,runid)])\n  # View(rl.subjects.f2.list[,.(count=.N),.(subid)])\n  # View(rl.subjects.f3.list[,.(count=.N),.(subid)])\n  #for now, let's use ReversalLeraning/New and randomly combine the missing ones from the other sets.\n  rl.all.subjects.list.forcondition<-rbind(rl.subjects.f2.list,\n                                           rl.subjects.f1.list[subid==subs.only.in.rl_behav],\n                                           rl.subjects.f3.list[subid %in% subs.only.in.reversallearning.results])\n  \n  rl.all.subjects.list.forcondition$Motivation<-condition\n  if(is.null(rl.all.subjects.list)){\n    rl.all.subjects.list<-rl.all.subjects.list.forcondition\n  }else{\n    rl.all.subjects.list<-rbind(rl.all.subjects.list,rl.all.subjects.list.forcondition)\n  }\n}\n\nrl.all.subjects.list[,presentation_n_over_segments:=presentation_n_in_segment]\nlast_nonreversal<-max(rl.all.subjects.list[reversal_trial==FALSE,presentation_n_in_segment])\n#aligns so that for every subject, we give the same index to the first reversal trial\nrl.all.subjects.list[reversal_trial==TRUE,presentation_n_over_segments:=presentation_n_in_segment+last_nonreversal]\n# rl.all.subjects.list[1:100]\n# length(unique(rl.all.subjects.list[Motivation==\"reward\",subid]))\n# length(unique(rl.all.subjects.list[Motivation==\"punishment\",subid]))\n\nbreak.labels=c(\"1\\nPre-reversal\",2:8,\"1\\nReversal\",2:5)\n\n\naccuracy.by.pres_seg.subid<-rl.all.subjects.list[,.(prop.correct=sum(correct)/.N,count=.N),.(presentation_n_over_segments,subid,Motivation)]\n\naccuracy.by.pres_seg<-\n  rl.all.subjects.list[,.(prop.correct=sum(correct)/.N,count=.N),.(presentation_n_over_segments,Motivation)]\n\n#mean across subjects\n# accuracy.by.pres_seg.subid.summary<-accuracy.by.pres_seg.subid[\n#   ,\n#   .(prop.correct.m=mean(prop.correct),\n#     prop.correct.sd=sd(prop.correct),\n#     prop.correct.p25=rank(prop.correct)/.N),\n#   .(presentation_n_over_segments,Motivation)]\n\nbreak.labels=c(\"1\\nPre-reversal\",2:last_nonreversal,\"1\\nReversal\",2:6)\naccuracy.by.pres_seg.subid.finalpc<-\n  accuracy.by.pres_seg.subid[presentation_n_over_segments==4,.(final.prop.correct=prop.correct),.(subid,Motivation)]\naccuracy.by.pres_seg.subid<-merge(accuracy.by.pres_seg.subid,accuracy.by.pres_seg.subid.finalpc,by=c(\"subid\",\"Motivation\"))\n\n",
    "created" : 1498155551954.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2027125801",
    "id" : "940921DA",
    "lastKnownWriteTime" : 1498156216,
    "last_content_update" : 1498156216605,
    "path" : "~/Google Drive/joint-modeling/reversal-learning/behavioral-analysis/rl_behav_analysis_learning_setup.R",
    "project_path" : "rl_behav_analysis_learning_setup.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}